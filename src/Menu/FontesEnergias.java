/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Menu;

import edu.inf.lp2_aed2_projeto1.DistribuicaoEletrica;
import edu.inf.lp2_aed2_projeto1.ImpossivelEmprestimoDePotenciaException;
import edu.inf.lp2_aed2_projeto1.Rede;
import edu.inf.lp2_aed2_projeto1.Rede;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lorac
 */
public class FontesEnergias extends javax.swing.JFrame {

    /**
     * Creates new form FontesEnergia
     */
    public FontesEnergias() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        jLabel1.setText("Lista de Informação Proveniente");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Fonte Id", "Tipo De Fonte", "Potencia Suportada", "Tensao energetica"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jComboBox1.setEditable(true);
        jComboBox1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FontesEnergia", "ZonasHabitacao", "Habitacao", "Equipamentos", "Data" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

        String selection = jComboBox1.getSelectedItem().toString();
        if (selection.equals("FontesEnergia")) {
            this.fillTableFontesEnergia();
        }
        if (selection.equals("ZonasHabitacao")) {

            try {
                this.fillTableZonasHabitacao_zona1();
            } catch (ImpossivelEmprestimoDePotenciaException ex) {
                Logger.getLogger(FontesEnergias.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        if (selection.equals("Habitacoes")) {

            try {
                this.fillTableHabitacoes();
            } catch (ImpossivelEmprestimoDePotenciaException ex) {
                Logger.getLogger(FontesEnergias.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        /*else if (selection.equals("Airplanes"))
         fillTableAirplanes();
         else if (selection.equals("Airconnections"))
         fillTableAirconnections();
         else if (selection.equals("Flights"))
         fillTableFlights();*/
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FontesEnergias().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void fillTableFontesEnergia() {

        Rede r = new Rede();

        r.carregarFontesEnergiaTxt("data/input/fontesenergia.txt");
        Iterable<Integer> fontesenergia = r.getFontes_energ().keys();

        String[] titles = {"ID", "Tipo", "Potencia Suportada", "Tensao Suportada"};

        Object[][] data = new Object[r.getFontes_energ().size()][4];

        int j = 0;
        for (Integer i : fontesenergia) {

            data[j][0] = r.getFontes_energ().get(i).getFonte_id();
            data[j][1] = r.getFontes_energ().get(i).getTipo();
            data[j][2] = r.getFontes_energ().get(i).getPotencia_gerada();
            data[j][3] = r.getFontes_energ().get(i).getTensao_energ();
            j++;

        }
        DefaultTableModel table = new DefaultTableModel(data, titles);
        this.jTable1.setModel(table);

    }

    private void fillTableZonasHabitacao_zona1() throws ImpossivelEmprestimoDePotenciaException {

        DistribuicaoEletrica d = new DistribuicaoEletrica();
        d.carregarZonasHabitacaoTxt("Data/input/1/zonahabitacao.txt");

        Iterable<Integer> zonas_habitacao1 = d.getZona_habit().keys();
        String[] titles = {"ID", "PotenciaSuportada"};

        Object[][] data = new Object[d.getZona_habit().size()][3];

        int j = 0;
        for (Integer i : zonas_habitacao1) {

            data[j][0] = d.getZona_habit().get(i).getZona_id();
            data[j][1] = d.getZona_habit().get(i).getEnerg_suportada();
            j++;

        }
        DefaultTableModel table = new DefaultTableModel(data, titles);
        this.jTable1.setModel(table);

        d.carregarZonasHabitacaoTxt("Data/input/2/zonahabitacao.txt");

        Iterable<Integer> zonas_habitacao2 = d.getZona_habit().keys();
        String[] titles1 = {"ID", "PotenciaSuportada"};

        Object[][] data1 = new Object[d.getZona_habit().size()][3];

        int j1 = 0;
        for (Integer i : zonas_habitacao2) {

            data1[j1][0] = d.getZona_habit().get(i).getZona_id();
            data1[j1][1] = d.getZona_habit().get(i).getEnerg_suportada();
            j1++;

        }
        DefaultTableModel table1 = new DefaultTableModel(data1, titles1);
        this.jTable1.setModel(table1);
    }

    private void fillTableHabitacoes() throws ImpossivelEmprestimoDePotenciaException {

        DistribuicaoEletrica d = new DistribuicaoEletrica();
        d.carregarHabitacaoTxt("Data/input/1/habitacoes.txt");

        Iterable<Integer> zonas_habitacao1 = d.getZona_habit().keys();
        String[] titles = {"ID Zona", "Id Habitacao", "contador de energia", "potencia suportada", "sustentatibilidade",
            "energia produzida"};

        System.out.println("kjeu");

        Object[][] data = new Object[d.getZona_habit().get(1).getHabitacoes().size()][6];

        int j = 0;
        for (Integer i1 : zonas_habitacao1) {
            for (Integer k : d.getZona_habit().get(i1).getHabitacoes().keys()) {

                data[j][0] = d.getZona_habit().get(i1).getZona_id();
                data[j][1] = d.getZona_habit().get(1).getHabitacoes().get(k).getHab_id();
                data[j][2] = d.getZona_habit().get(1).getHabitacoes().get(k).getPotencia_suportada();
                data[j][4] = d.getZona_habit().get(1).getHabitacoes().get(k).calculaSustentabilidadeCasa();
                data[j][5] = d.getZona_habit().get(1).getHabitacoes().get(k).getEnerg_prod();

                j++;

            }

            DefaultTableModel table = new DefaultTableModel(data, titles);
            this.jTable1.setModel(table);
        }

        /*d.carregarZonasHabitacaoTxt("Data/input/2/zonahabitacao.txt");

                Iterable<Integer> zonas_habitacao2 = d.getZona_habit().keys();
                String[] titles1 = {"ID", "PotenciaSuportada"};

                Object[][] data1 = new Object[d.getZona_habit().size()][3];

                int j1 = 0;
                for (Integer i : zonas_habitacao2) {

                    data1[j1][0] = d.getZona_habit().get(i).getZona_id();
                    data1[j1][1] = d.getZona_habit().get(i).getEnerg_suportada();
                    j1++;

                }
                DefaultTableModel table1 = new DefaultTableModel(data1, titles1);
                this.jTable1.setModel(table1);*/
    }
}
